DOCVFILES = $(filter-out $(wildcard **stdpp/*),$(VFILES))
DOCGLOBFILES = $(DOCVFILES:.v=.glob)

CSSFILES = resources/coqdoc.css resources/coqdocjs.css
JSFILES = resources/config.js resources/coqdocjs.js
HTMLFILES = resources/header.html resources/footer.html
DEPFILES = resources/deps.png resources/map.html

COQDOCDIR = docs/coqdoc
COQDOCHTMLFLAGS = --toc --toc-depth 3 --index indexpage --html -s \
  --interpolate --no-lib-name --parse-comments \
  --with-header resources/header.html --with-footer resources/footer.html

COQ2HTML = coq2html
COQ2HTMLDIR = docs/coq2html

ALECTRYON = ~/alectryon/alectryon.py
ALECTRYONDIR = docs/alectryon
ALECTRYONHTMLFLAGS = --frontend coqdoc --webpage-style windowed
ALECTRYONHTMLFILES = $(DOCVFILES:.v=.alectryon.html)

DPDFILES = $(DOCVFILES:.v=.dpd)
DOTFILES = $(DOCVFILES:.v=.dot)
SVGFILES = $(DOCVFILES:.v=.svg)

coqdoc: $(DOCGLOBFILES) $(DOCVFILES) $(CSSFILES) $(JSFILES) $(HTMLFILES) $(DEPFILES)
	$(SHOW)'COQDOC -d $(COQDOCDIR)'
	$(HIDE)mkdir -p $(COQDOCDIR)
	$(HIDE)$(COQDOC) $(COQDOCHTMLFLAGS) $(COQDOCLIBS) -d $(COQDOCDIR) $(DOCVFILES)
	$(SHOW)'COPY resources'
	$(HIDE)cp $(CSSFILES) $(JSFILES) $(DEPFILES) $(COQDOCDIR)
.PHONY: coqdoc

coq2html: $(DOCGLOBFILES) $(DOCVFILES)
	$(SHOW)'COQ2HTML -d $(COQ2HTMLDIR)'
	$(HIDE)mkdir -p $(COQ2HTMLDIR)
	$(HIDE)cd Lib && $(COQ2HTML) -base CasperCBC.Lib -d ../$(COQ2HTMLDIR) *.v *.glob
	$(HIDE)cd CBC && $(COQ2HTML) -base CasperCBC.CBC -d ../$(COQ2HTMLDIR) *.v *.glob
	$(HIDE)cd VLSM && $(COQ2HTML) -base CasperCBC.VLSM -d ../$(COQ2HTMLDIR) *.v *.glob
.PHONY: coq2html

$(ALECTRYONHTMLFILES): %.alectryon.html: %.v %.glob %.vo $(ALECTRYONDIR)/toc.html $(ALECTRYONDIR)/map.html $(ALECTRYONDIR)/deps.png
	$(SHOW)'ALECTRYON --output-directory $(ALECTRYONDIR) --output $(ALECTRYONDIR)/$(addsuffix .html,$(addprefix CasperCBC.,$(subst /,.,$(basename $<))))'
	$(HIDE)$(ALECTRYON) $(ALECTRYONHTMLFLAGS) $(COQDOCLIBS) --output-directory $(ALECTRYONDIR) --output $(ALECTRYONDIR)/$(addsuffix .html,$(addprefix CasperCBC.,$(subst /,.,$(basename $<)))) $<
.PHONY: $(ALECTRYONHTMLFILES)

alectryon: $(ALECTRYONHTMLFILES)
.PHONY: alectryon

$(ALECTRYONDIR)/toc.html:
	$(HIDE)mkdir -p $(@D)
	$(HIDE)cat resources/alectryon_toc_header.html > $@
	$(HIDE)for vfile in $(addprefix CasperCBC.,$(subst /,.,$(basename $(DOCVFILES)))) ; do \
	    echo "    <li><a href='$$vfile.html'>$$vfile</a></li>" >> $@; \
	done
	$(HIDE)cat resources/alectryon_toc_footer.html >> $@

$(ALECTRYONDIR)/map.html: deps.map
	$(HIDE)mkdir -p $(@D)
	sed -e '/#include deps.map/r deps.map' resources/map_template.html > $(ALECTRYONDIR)/map.html

$(ALECTRYONDIR)/deps.png: deps.dot
	$(HIDE)mkdir -p $(@D)
	dot -T png deps.dot > $(ALECTRYONDIR)/deps.png

deps.dot: $(DOCVFILES)
	$(SHOW)'GENERATE deps.dot'
	$(HIDE)./scripts/dotdeps.sh $(DOCVFILES) > $@

deps.map: deps.dot
	dot -T cmap deps.dot | sed -e 's,>$$,/>,' > deps.map

resources/deps.png: deps.dot
	dot -T png deps.dot > resources/deps.png

resources/map.html: deps.map
	sed -e '/#include deps.map/r deps.map' resources/map_template.html > resources/map.html

resources/index.html: resources/index.md
	pandoc -s -o $@ $<

$(DPDFILES): %.dpd: %.v %.glob %.vo
	echo "Set DependGraph File \"$@\". Print FileDependGraph $(addprefix CasperCBC.,$(subst /,.,$(basename $@)))." | $(COQTOP) $(COQDEBUG) $(COQFLAGS) $(COQLIBS) -require-import-from rvdpdgraph rvdpdgraph -load-vernac-object $(addprefix CasperCBC.,$(subst /,.,$(basename $@))) -quiet > /dev/null 2>&1

$(DOTFILES): %.dot: %.dpd
	rvdpd2dot -graphname rvdpdgraph -o $@ $<

$(SVGFILES): %.svg: %.dot
	dot -T svg $< > $(COQDOCDIR)/$(addprefix CasperCBC.,$(subst /,.,$@))
.PHONY: $(SVGFILES)

rvdpd: $(SVGFILES)
.PHONY: rvdpd

clean::
	$(HIDE)rm -f deps.dot deps.map $(DEPFILES) $(DPDFILES) $(DOTFILES) resources/index.html

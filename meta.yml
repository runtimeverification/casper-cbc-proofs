---
fullname: Casper CBC Proofs
shortname: casper-cbc-proofs
opam_name: coq-casper-cbc
organization: runtimeverification
community: false
coqdoc: true

synopsis: >-
  Protocol verification of Casper Correct-By-Construction

description: |-
  Protocol verification of Casper Correct-By-Construction in Coq.

authors:
- name: Mihai Calancea
- name: Denisa Diaconescu
- name: Elaine Li
- name: Lucas Peña
- name: Grigore Roșu
- name: Traian Șerbănuță
- name: Vlad Zamfir

opam-file-maintainer: palmskog@gmail.com

opam-file-version: dev

license:
  fullname: University of Illinois/NCSA Open Source License
  identifier: NCSA
  file: LICENSE.md

supported_coq_versions:
  text: 8.12 or later
  opam: '{>= "8.12" & < "8.13~"}'

namespace: CasperCBC

keywords:
- name: Casper
- name: consensus

categories:
- name: Computer Science/Concurrent Systems and Protocols/Theory of concurrent systems
- name: Computer Science/Decision Procedures and Certified Algorithms/Correctness proofs of algorithms

build: |-
 ## Building instructions

 ``` shell
 git clone https://github.com/runtimeverification/casper-cbc-proofs.git
 cd casper-cbc-proofs
 make   # or make -j <number-of-cores-on-your-machine>
 ```

documentation: |-
  ## Structure

  - `Lib`: various extensions to the Coq standard library
  - `CBC`: Formalizations of the FullNode and LightNode protocols
    specified in https://github.com/ethereum/cbc-casper
  - `VLSM`: Formalization of Vlad Zamfir's new, composable, model
    used for stating and solving consensus problems.

  See also the latest [online documentation][coqdoc-link] of the Coq files.

  [coqdoc-link]: https://runtimeverification.github.io/casper-cbc-proof-docs/docs/latest/coqdoc/toc.html

  ## Generating proof movies

  To generate proof movies via [Alectryon](https://github.com/cpitclaudel/alectryon), first make sure
  its dependencies are installed:
  ```
  opam install coq-serapi
  python3 -m pip install --user --upgrade pygments dominate beautifulsoup4 docutils
  ```
  To generate the Alectryon resources (can potentially take several minutes), run:
  ```
  make alectryon
  ```
  Then, point your browser at `docs/alectryon`.
---
